(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4893],{40477:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/detections/detection-as-code/getting-started",function(){return s(84782)}])},84782:function(e,n,s){"use strict";s.r(n),s.d(n,{useTOC:function(){return d}});var i=s(85893),a=s(37812),t=s(84854),r=s(79299);function d(e){return[{value:"Detection Data Model",id:"detection-data-model",depth:2},{value:"Detection Time Windowing",id:"detection-time-windowing",depth:2},{value:"Creating a new detection",id:"creating-a-new-detection",depth:2}]}n.default=(0,a.c)(function(e){let{toc:n=d(e)}=e,s={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{children:"Getting Started with Detection As Code"}),"\n",(0,i.jsx)(s.p,{children:"Detection as code relies on the RunReveal CLI. Downloading the CLI can be done\nthrough brew or from our github."}),"\n",(0,i.jsx)(s.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,i.jsxs)(s.code,{children:[(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"brew tap runreveal/runreveal"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"brew install runreveal"})})]})}),"\n",(0,i.jsx)(s.p,{children:"Next you’ll need to log into RunReveal in the CLI. This command will opeen\na browser for you to complete your log in through."}),"\n",(0,i.jsx)(s.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,i.jsx)(s.code,{children:(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"runreveal init"})})})}),"\n",(0,i.jsx)(s.h2,{id:n[0].id,children:n[0].value}),"\n",(0,i.jsxs)(s.p,{children:["The detection data model is described as following. All fields are marked as\neither optional or required. This file needs to be in either ",(0,i.jsx)(s.code,{children:"yaml"})," format or\n",(0,i.jsx)(s.code,{children:"json"})," format, either works."]}),"\n",(0,i.jsx)(s.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,i.jsxs)(s.code,{children:[(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Required: The name of the query for reference"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"name: root_account_usage"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:" "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: A display name that is shown in the UI"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"displayName: AWS Root Account Was Used"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:" "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Required: The name of the file containing the sql query"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"file: root_account_usage.sql"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:" "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: A description of the detection."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"description: Monitor for usage of the AWS root account."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:" "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: Additional notes that can be attached to the detection."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"notes: |-"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  This is a notes field that can store info about this detection."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  It can be useful to store links to playbooks in your other systems."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: An array of strings to help group queries"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"categories:"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  - aws"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: A severity string to identify the importance of the detection results."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"severity: low"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:" "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: An array of mitre attack framework classifications. "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# This is useful when identifying attack patterns."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"mitreAttacks:"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  - initial-access"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: An array of sources that this detection is used for."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# This can be useful to help identify which sources are lacking coverage."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"sourceTypes:"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  - cloudtrail"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Required: A cron string that identifies how often this detection will execute."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"schedule: '*/15 * * * *'"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:" "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional (default: false): If true will disable this detection from running on its schedule"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"disabled: false"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:" "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: Key/Value pairs that are replaced when the query executes. "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"parameters:"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  userAgent: AWS Internal"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:" "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: An array of notification channel names that should receive an alert if this detection triggers"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"notificationNames:"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  - email"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"  "})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"# Optional: A notification template name to override the defualt channel template if this detection triggers."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"notificationTemplate: aws_template"})})]})}),"\n",(0,i.jsx)(s.h2,{id:n[1].id,children:n[1].value}),"\n",(0,i.jsx)(s.p,{children:"One thing that many detection queries tend to do is query by looking back in\ntime and handling time windowing."}),"\n",(0,i.jsx)(s.p,{children:"When writing a detection query it’s best to write your query in a way that:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Uses ",(0,i.jsx)(s.code,{children:"receivedAt"})," times for windowing of logs on short windows, not ",(0,i.jsx)(s.code,{children:"eventTime"})]}),"\n",(0,i.jsxs)(s.li,{children:["Uses parameters ",(0,i.jsx)(s.code,{children:"{from:DateTime}"})," and ",(0,i.jsx)(s.code,{children:"{to:DateTime}"})," to ensure all logs are queried."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["RunReveal allows you to specify parameters in your queries for dynamic values passed\nin at query runtime. RunReveal will always pass ",(0,i.jsx)(s.code,{children:"from"})," and ",(0,i.jsx)(s.code,{children:"to"})," to your queries whether\nthey are specified or not."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"from"})," the end of the previous window that was queried."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"to"})," the current time, and the next ",(0,i.jsx)(s.code,{children:"from"})," time."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["In practice what this looks like, when writing a simple query that looks for the eventName\n",(0,i.jsx)(s.code,{children:"example"})," your query would look something like this."]}),"\n",(0,i.jsx)(s.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,i.jsxs)(s.code,{children:[(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"select * from logs"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"where eventName='example'"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"and receivedAt BETWEEN {from:DateTime} and {to:DateTime}"})})]})}),"\n",(0,i.jsxs)(s.p,{children:["It’s important not to use eventTime because many log sources deliver eventTimes in a delayed\nmanner, and eventTime is the timestamp provided by the log source. If you instead window\nusing ",(0,i.jsx)(s.code,{children:"eventTime"})," it can cause messages to be missed in situations where log sources deliver\ndelayed data."]}),"\n",(0,i.jsxs)(s.p,{children:["By querying ",(0,i.jsx)(s.code,{children:"receivedAt"})," you ensure data is searched as it’s received by the RunReveal platform\nregardless of data delays from sources."]}),"\n",(0,i.jsx)(s.h2,{id:n[2].id,children:n[2].value}),"\n",(0,i.jsx)(s.p,{children:"If you’d like to save yourself from writing this yaml, the CLI can help you create the yaml\nstructure needed to create a new detection."}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"runreveal detections create"})," command will walk you through a wizard that will output\na yaml containing the structure you need to upload a detection to our api."]}),"\n",(0,i.jsx)(s.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,i.jsxs)(s.code,{children:[(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:":) runreveal detections create"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"Detection name: my-detection"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"Description: example for the docs."})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"Categories (comma separated): aws, signal"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"Severity: Low"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"Risk Score (number): 10"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"ATT&CK classification: collection"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"Enabled: true"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"Query Type: sql"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"Detection Created:"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"        my-detection.yaml"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:"        my-detection.sql"})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{})}),"\n",(0,i.jsx)(s.span,{children:(0,i.jsx)(s.span,{children:":) "})})]})})]})},"/detections/detection-as-code/getting-started",{filePath:"pages/detections/detection-as-code/getting-started.mdx",timestamp:172995145e4,pageMap:t.v,frontMatter:{title:"Getting Started",description:"Get started with detection as code using the RunReveal CLI. Install the CLI, authenticate, and understand the detection data model for version control."},title:"Getting Started"},"undefined"==typeof RemoteContent?d:RemoteContent.useTOC)}},function(e){e.O(0,[7812,4854,2888,9774,179],function(){return e(e.s=40477)}),_N_E=e.O()}]);