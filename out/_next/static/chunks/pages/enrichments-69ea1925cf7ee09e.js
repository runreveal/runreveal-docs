(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2844],{21861:function(n,e,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/enrichments",function(){return s(55211)}])},55211:function(n,e,s){"use strict";s.r(e),s.d(e,{useTOC:function(){return l}});var a=s(85893),i=s(37812),r=s(84854),c=s(79299);function l(n){return[{value:"How it works",id:"how-it-works",depth:2},{value:"Example",id:"example",depth:2}]}e.default=(0,i.c)(function(n){let{toc:e=l(n)}=n,s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",...(0,c.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{children:"Enrichments"}),"\n",(0,a.jsx)(s.p,{children:"Enrichments allow you to augment your log events with supplemental data based on pattern matching."}),"\n",(0,a.jsx)(s.h2,{id:e[0].id,children:e[0].value}),"\n",(0,a.jsx)(s.p,{children:"An enrichment in Runreveal consists primarily of two parts:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["An enrichment configuration, which contains metadata about your enrichment like ",(0,a.jsx)(s.code,{children:"Name"})," and ",(0,a.jsx)(s.code,{children:"Description"}),", which log sources to\nenrich, as well as information about which log event field you wish to match with."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["A set of enrichment ",(0,a.jsx)(s.code,{children:"Rules"}),", which describe the data you wish to add to your log events, and the conditions when you\nwould like that data added."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:e[1].id,children:e[1].value}),"\n",(0,a.jsx)(s.p,{children:"Let’s say you are wanting to enrich log events from your cloudflare audit log source, to map user emails to user id’s\nfrom some other external system you have."}),"\n",(0,a.jsxs)(s.p,{children:["First, let us take a look at an example log event from that source, a log in event from ",(0,a.jsx)(s.code,{children:"bob@example.com"}),":"]}),"\n",(0,a.jsx)(s.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,a.jsxs)(s.code,{children:[(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"{"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "action": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "result": true,'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "type": "login"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"  },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "actor": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "email": "bob@example.com",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "id": "c38246172e13e3e341f7ef3319d2c913",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "ip": "24.225.52.121",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "type": "user"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"  },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "id": "a683351a-5e63-7272-72b6-6bf7f712fdf2",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "interface": "",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "metadata": {},'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "newValue": "",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "oldValue": "",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "owner": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "id": "c38246172e13e3e341f7ef3319d2c913"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"  },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "resource": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "id": "c38246172e13e3e341f7ef3319d2c913",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "type": "account"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"  },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "when": "2024-08-20T23:47:18Z",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "newValueJson": {},'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "oldValueJson": {}'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"}"})})]})}),"\n",(0,a.jsxs)(s.p,{children:["To create our enrichment configuration, we need to determine which log event field we want to match with to look up our\nsupplemental data.  We tell the enrichment configuration how to find this field using\n",(0,a.jsx)(s.a,{href:"https://github.com/tidwall/gjson/blob/master/SYNTAX.md#gjson-path-syntax",children:"gjson path notation"}),".  In this case, we could create\nan enrichment configuration with path ",(0,a.jsx)(s.code,{children:"actor.email"})," configured to enrich the cloudflare audit log source."]}),"\n",(0,a.jsx)("img",{src:"/enrichment-config-create.png"}),"\n",(0,a.jsxs)(s.p,{children:["Next, we will want to define a set of rules which will map cloudflare user email adresses to user id’s.  If ",(0,a.jsx)(s.code,{children:"bob@example.com"})," here\nhad user id ",(0,a.jsx)(s.code,{children:"12345"}),", then we could make a rule:"]}),"\n",(0,a.jsx)("img",{src:"/enrichment-rule-create.png"}),"\n",(0,a.jsx)(s.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,a.jsx)(s.code,{children:(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'exact, bob@example.com, {"user_id": "12345"}'})})})}),"\n",(0,a.jsxs)(s.p,{children:["This would tell Runreveal to match any log event where the value of ",(0,a.jsx)(s.code,{children:"actor.email"})," is ",(0,a.jsx)(s.em,{children:"exactly"})," ",(0,a.jsx)(s.code,{children:"bob@example.com"}),".  If the event\ndoes match, then ",(0,a.jsx)(s.code,{children:'{"user_id": "12345"}'})," will be added to the ",(0,a.jsx)(s.code,{children:"enrichments"})," field of the log event before it is written to its destination."]}),"\n",(0,a.jsxs)(s.p,{children:["Now, we can save and enable our enrichment by clicking the ",(0,a.jsx)(s.code,{children:"Create Enrichment"})," button:"]}),"\n",(0,a.jsx)("img",{src:"/enrichment-total-create.png"}),"\n",(0,a.jsxs)(s.p,{children:["To verify that our enrichment is working, we can search for our newly enriched events on the ",(0,a.jsx)(s.code,{children:"Explore"})," page:"]}),"\n",(0,a.jsx)("img",{src:"/enrichment-explore.png"}),"\n",(0,a.jsx)(s.p,{children:"From the results, we can see our resulting log event ends up in the logs table as:"}),"\n",(0,a.jsx)(s.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,a.jsxs)(s.code,{children:[(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"{"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"  ..."})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "enrichments": ['})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"    {"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "data": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'        "user_id": "12345"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"      },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "name": "actor.email",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "provider": "cloudflare-email-to-external-id",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "type": "custom",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "value": "bob@example.com"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"    }"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"  ],"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'  "rawLog": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "action": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "result": true,'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "type": "login"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"    },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "actor": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "email": "bob@example.com",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "id": "c38246172e13e3e341f7ef3319d2c913",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "ip": "24.225.52.121",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "type": "user"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"    },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "id": "a683351a-5e63-7272-72b6-6bf7f712fdf2",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "interface": "",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "metadata": {},'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "newValue": "",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "oldValue": "",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "owner": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "id": "c38246172e13e3e341f7ef3319d2c913"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"    },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "resource": {'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "id": "c38246172e13e3e341f7ef3319d2c913",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'      "type": "account"'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"    },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "when": "2024-08-20T23:47:18Z",'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "newValueJson": {},'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:'    "oldValueJson": {}'})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"  },"})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"  ..."})}),"\n",(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{children:"}"})})]})})]})},"/enrichments",{filePath:"pages/enrichments.mdx",timestamp:1724263207e3,pageMap:r.v,frontMatter:{title:"Log Enrichments - Augment Security Data with Supplemental Information",description:"Enhance your log events with supplemental data using RunReveal enrichments. Learn how to create enrichment configurations and rules for pattern matching and data augmentation."},title:"Log Enrichments - Augment Security Data with Supplemental Information"},"undefined"==typeof RemoteContent?l:RemoteContent.useTOC)}},function(n){n.O(0,[7812,4854,2888,9774,179],function(){return n(n.s=21861)}),_N_E=n.O()}]);