(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5011],{5011:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/how-to-guides/collect-nginx-logs",function(){return s(85488)}])},85488:function(e,n,s){"use strict";s.r(n),s.d(n,{useTOC:function(){return t}});var r=s(85893),o=s(37812),a=s(84854),i=s(79299);function t(e){return[]}n.default=(0,o.c)(function(e){let n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",span:"span",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"Collect Nginx Logs"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/runreveal/reveald",children:"Reveald"})," is an easy-to-use, performant,\nefficient, and open source log and event collection daemon for endpoint\ncollection."]}),"\n",(0,r.jsx)(n.p,{children:"We can use reveald to collect nginx logs to be visualized in RunReveal.  In this\nguide, we’ll install, configure and run reveald on the machine running nginx (or\na host that is visible on the network from the host running nginx)."}),"\n",(0,r.jsxs)(n.p,{children:["First, download a reveald release for the operating system and architecture of\nthe host you’ll be running the daemon on from the releases page\n",(0,r.jsx)(n.a,{href:"https://github.com/runreveal/reveald/releases",children:"here"}),".\n(",(0,r.jsx)(n.a,{href:"https://github.com/runreveal/reveald/releases",children:"https://github.com/runreveal/reveald/releases"}),")\nExtract the package to a directory of your choosing on the host."]}),"\n",(0,r.jsxs)(n.p,{children:["Next, login to RunReveal and create a ",(0,r.jsx)(n.a,{href:"/sources/source-types/structured-webhooks",children:"structured\nwebhook"})," source.  This will give\nus a webhookURL needed to configure a destination in reveald to send our data to\nrunreveal.  You can create a source directly using ",(0,r.jsx)(n.a,{href:"https://app.runreveal.com/dash/sources/add/structured-webhook",children:"this\nlink"})]}),"\n",(0,r.jsxs)(n.p,{children:["Here is a sample configuration for the syslog listener for which we’ll be\nsending our logs.  Replace ",(0,r.jsx)(n.code,{children:"{{YOUR-RUNREVEAL-WEBHOOKURL}}"})," with the webhook\nreceived from the UI in the step above."]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"{"})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'  "sources": {'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'    "nginx-logs": {'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'        "type": "nginx_syslog",'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'        "addr": "127.0.0.1:5514",'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"    },"})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"  },"})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'  "destinations": {'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'    "rr-dest": {'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'      "type": "runreveal",'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'      "webhookURL": "{{YOUR-RUNREVEAL-WEBHOOKURL}}",'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"    },"})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"  },"})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"}"})})]})}),"\n",(0,r.jsx)(n.p,{children:"We can run reveald pointing at the configuration like so (assuming you download\nit to the same directory as the binary)."}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,r.jsx)(n.code,{children:(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"./reveald run --config=./config.json"})})})}),"\n",(0,r.jsxs)(n.p,{children:["Now, add this ",(0,r.jsx)(n.code,{children:"access_log"})," line to the ",(0,r.jsx)(n.code,{children:"server"})," block for the sites that you\nwish to receive access logs from.  If you’re not running reveald on the same\nhost as nginx, replace the localhost address ",(0,r.jsx)(n.code,{children:"127.0.0.1"})," with the host IP you’ve\nconfigured reveald to listen on."]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"server {"})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"    access_log syslog:server=127.0.0.1:5514 combined;"})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"    # ... other config ..."})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"}"})})]})}),"\n",(0,r.jsx)(n.p,{children:"Test your nginx config and reload the nginx process:"}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,r.jsx)(n.code,{children:(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"sudo nginx -s reload"})})})}),"\n",(0,r.jsx)(n.p,{children:"You should now be getting logs in your RunReveal workspace!  Let’s run some\nqueries on RunReveal once you’ve gotten some traffic to the site you’ve\nconfigured."}),"\n",(0,r.jsx)("img",{src:"/nginx-2.png"}),"\n",(0,r.jsxs)(n.p,{children:["That’s it!  If you encounter any problems setting this up, please feel free to\nreach out on our discord, via the chat bubble on the website, or via\n",(0,r.jsx)(n.a,{href:"mailto:contact@runreveal.com",children:"contact@runreveal.com"}),"."]})]})},"/how-to-guides/collect-nginx-logs",{filePath:"pages/how-to-guides/collect-nginx-logs.mdx",timestamp:1750451516e3,pageMap:a.v,frontMatter:{title:"Collect Nginx Logs",description:"Set up Nginx log collection using Reveald daemon. Configure syslog forwarding, webhook destinations, and monitor web traffic in RunReveal."},title:"Collect Nginx Logs"},"undefined"==typeof RemoteContent?t:RemoteContent.useTOC)}},function(e){e.O(0,[7812,4854,2888,9774,179],function(){return e(e.s=5011)}),_N_E=e.O()}]);