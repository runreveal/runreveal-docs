(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7809],{30685:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/enrichments/loading-rules-from-csv",function(){return i(35307)}])},35307:function(e,n,i){"use strict";i.r(n),i.d(n,{useTOC:function(){return a}});var r=i(85893),t=i(37812),s=i(84854),l=i(79299);function a(e){return[]}n.default=(0,t.c)(function(e){let n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",span:"span",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"Loading Rules From CSV"}),"\n",(0,r.jsx)(n.p,{children:"If you are creating an enrichment with many rules, you may find it more convenient to load your rule definitions from a CSV instead of\nmanually creating each rule in the UI.  To do so, you should prepare a CSV with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Exactly 3 columns"}),"\n",(0,r.jsx)(n.li,{children:"Comma delimited"}),"\n",(0,r.jsxs)(n.li,{children:["Double quoted values.  Escaping of double quotes within values can be done with double double quotes (",(0,r.jsx)(n.code,{children:'""'}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"where each row is an enrichment rule of the form:"}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,r.jsx)(n.code,{children:(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:"match_type,pattern,data"})})})}),"\n",(0,r.jsx)(n.p,{children:"Where:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"match_type"})," is one of ",(0,r.jsx)(n.code,{children:"exact"}),", ",(0,r.jsx)(n.code,{children:"regex"}),", or ",(0,r.jsx)(n.code,{children:"cidr"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pattern"})," is the pattern to match for this rule"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," is a JSON object with the data to be added to log events matching this enrichment rule.  ",(0,r.jsx)(n.code,{children:"data"})," is furthermore restricted to string\nkeys and values, with no nested objects."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Some valid rule examples:"}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'"exact","alice@example.com","{""user_id"":""12345""}"'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'"regex","\\.org^","{""email_tld"":""org""}"'})}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{children:'"cidr","10.0.0.0/16","{""location"":""san francisco""}"'})})]})}),"\n",(0,r.jsxs)(n.p,{children:["On the create/edit enrichment page, in the ",(0,r.jsx)(n.code,{children:"Rules"})," section, you will find a ",(0,r.jsx)(n.code,{children:"Load from file"})," button."]}),"\n",(0,r.jsx)("img",{src:"/enrichment-load-from-file.png"}),"\n",(0,r.jsxs)(n.p,{children:["On successfully loading your rules, you will see the table below populated.  If you are happy with the results, you can click ",(0,r.jsx)(n.code,{children:"Create Enrichment"})," (or ",(0,r.jsx)(n.code,{children:"Update Enrichment"})," if this is an update) to enable your new rules."]}),"\n",(0,r.jsx)("img",{src:"/enrichment-rules-loaded.png"})]})},"/enrichments/loading-rules-from-csv",{filePath:"pages/enrichments/loading-rules-from-csv.mdx",timestamp:1724263207e3,pageMap:s.v,frontMatter:{title:"Loading Rules From CSV",description:"Import enrichment rules from CSV files for bulk configuration. Create comma-delimited files with match types, patterns, and data for efficient rule management."},title:"Loading Rules From CSV"},"undefined"==typeof RemoteContent?a:RemoteContent.useTOC)}},function(e){e.O(0,[7812,4854,2888,9774,179],function(){return e(e.s=30685)}),_N_E=e.O()}]);